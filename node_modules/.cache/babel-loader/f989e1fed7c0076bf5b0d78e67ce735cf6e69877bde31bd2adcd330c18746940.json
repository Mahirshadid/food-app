{"ast":null,"code":"import { extend } from '../../../utils/utils';\nexport default function updateActiveIndex(newActiveIndex) {\n  var swiper = this;\n  var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  var slidesGrid = swiper.slidesGrid,\n    snapGrid = swiper.snapGrid,\n    params = swiper.params,\n    previousIndex = swiper.activeIndex,\n    previousRealIndex = swiper.realIndex,\n    previousSnapIndex = swiper.snapIndex;\n  var activeIndex = newActiveIndex;\n  var snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (var i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    } // Normalize slideIndex\n\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    var skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  } // Get real index\n\n  var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n  extend(swiper, {\n    snapIndex: snapIndex,\n    realIndex: realIndex,\n    previousIndex: previousIndex,\n    activeIndex: activeIndex\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","map":{"version":3,"names":["extend","updateActiveIndex","newActiveIndex","swiper","translate","rtlTranslate","slidesGrid","snapGrid","params","previousIndex","activeIndex","previousRealIndex","realIndex","previousSnapIndex","snapIndex","i","length","normalizeSlideIndex","indexOf","skip","Math","min","slidesPerGroupSkip","floor","slidesPerGroup","emit","parseInt","slides","eq","attr","initialized","runCallbacksOnInit"],"sources":["F:/FRONTEND/food-app/node_modules/swiper/esm/components/core/update/updateActiveIndex.js"],"sourcesContent":["import { extend } from '../../../utils/utils';\nexport default function updateActiveIndex(newActiveIndex) {\n  var swiper = this;\n  var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  var slidesGrid = swiper.slidesGrid,\n      snapGrid = swiper.snapGrid,\n      params = swiper.params,\n      previousIndex = swiper.activeIndex,\n      previousRealIndex = swiper.realIndex,\n      previousSnapIndex = swiper.snapIndex;\n  var activeIndex = newActiveIndex;\n  var snapIndex;\n\n  if (typeof activeIndex === 'undefined') {\n    for (var i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    } // Normalize slideIndex\n\n\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    var skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n\n    return;\n  } // Get real index\n\n\n  var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n  extend(swiper, {\n    snapIndex: snapIndex,\n    realIndex: realIndex,\n    previousIndex: previousIndex,\n    activeIndex: activeIndex\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}