{"ast":null,"code":"/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed, runCallbacks, internal, threshold) {\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (threshold === void 0) {\n    threshold = 0.5;\n  }\n  var swiper = this;\n  var index = swiper.activeIndex;\n  var skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  var snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    var currentSnap = swiper.snapGrid[snapIndex];\n    var nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    var prevSnap = swiper.snapGrid[snapIndex - 1];\n    var _currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (_currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","map":{"version":3,"names":["slideToClosest","speed","runCallbacks","internal","threshold","params","swiper","index","activeIndex","skip","Math","min","slidesPerGroupSkip","snapIndex","floor","slidesPerGroup","translate","rtlTranslate","snapGrid","currentSnap","nextSnap","prevSnap","_currentSnap","max","slidesGrid","length","slideTo"],"sources":["F:/FRONTEND/food-app/node_modules/swiper/esm/components/core/slide/slideToClosest.js"],"sourcesContent":["/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed, runCallbacks, internal, threshold) {\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  if (threshold === void 0) {\n    threshold = 0.5;\n  }\n\n  var swiper = this;\n  var index = swiper.activeIndex;\n  var skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  var snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    var currentSnap = swiper.snapGrid[snapIndex];\n    var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    var prevSnap = swiper.snapGrid[snapIndex - 1];\n    var _currentSnap = swiper.snapGrid[snapIndex];\n\n    if (translate - prevSnap <= (_currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}"],"mappings":"AAAA;AACA,eAAe,SAASA,cAAcA,CAACC,KAAK,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,SAAS,EAAE;EAC/E,IAAIH,KAAK,KAAK,KAAK,CAAC,EAAE;IACpBA,KAAK,GAAG,IAAI,CAACI,MAAM,CAACJ,KAAK;EAC3B;EAEA,IAAIC,YAAY,KAAK,KAAK,CAAC,EAAE;IAC3BA,YAAY,GAAG,IAAI;EACrB;EAEA,IAAIE,SAAS,KAAK,KAAK,CAAC,EAAE;IACxBA,SAAS,GAAG,GAAG;EACjB;EAEA,IAAIE,MAAM,GAAG,IAAI;EACjB,IAAIC,KAAK,GAAGD,MAAM,CAACE,WAAW;EAC9B,IAAIC,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACL,MAAM,CAACD,MAAM,CAACO,kBAAkB,EAAEL,KAAK,CAAC;EAC5D,IAAIM,SAAS,GAAGJ,IAAI,GAAGC,IAAI,CAACI,KAAK,CAAC,CAACP,KAAK,GAAGE,IAAI,IAAIH,MAAM,CAACD,MAAM,CAACU,cAAc,CAAC;EAChF,IAAIC,SAAS,GAAGV,MAAM,CAACW,YAAY,GAAGX,MAAM,CAACU,SAAS,GAAG,CAACV,MAAM,CAACU,SAAS;EAE1E,IAAIA,SAAS,IAAIV,MAAM,CAACY,QAAQ,CAACL,SAAS,CAAC,EAAE;IAC3C;IACA;IACA,IAAIM,WAAW,GAAGb,MAAM,CAACY,QAAQ,CAACL,SAAS,CAAC;IAC5C,IAAIO,QAAQ,GAAGd,MAAM,CAACY,QAAQ,CAACL,SAAS,GAAG,CAAC,CAAC;IAE7C,IAAIG,SAAS,GAAGG,WAAW,GAAG,CAACC,QAAQ,GAAGD,WAAW,IAAIf,SAAS,EAAE;MAClEG,KAAK,IAAID,MAAM,CAACD,MAAM,CAACU,cAAc;IACvC;EACF,CAAC,MAAM;IACL;IACA;IACA,IAAIM,QAAQ,GAAGf,MAAM,CAACY,QAAQ,CAACL,SAAS,GAAG,CAAC,CAAC;IAC7C,IAAIS,YAAY,GAAGhB,MAAM,CAACY,QAAQ,CAACL,SAAS,CAAC;IAE7C,IAAIG,SAAS,GAAGK,QAAQ,IAAI,CAACC,YAAY,GAAGD,QAAQ,IAAIjB,SAAS,EAAE;MACjEG,KAAK,IAAID,MAAM,CAACD,MAAM,CAACU,cAAc;IACvC;EACF;EAEAR,KAAK,GAAGG,IAAI,CAACa,GAAG,CAAChB,KAAK,EAAE,CAAC,CAAC;EAC1BA,KAAK,GAAGG,IAAI,CAACC,GAAG,CAACJ,KAAK,EAAED,MAAM,CAACkB,UAAU,CAACC,MAAM,GAAG,CAAC,CAAC;EACrD,OAAOnB,MAAM,CAACoB,OAAO,CAACnB,KAAK,EAAEN,KAAK,EAAEC,YAAY,EAAEC,QAAQ,CAAC;AAC7D"},"metadata":{},"sourceType":"module","externalDependencies":[]}